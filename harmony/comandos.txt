///////////////////////////////
////// Activar ambiente //////
//////////////////////////////
ubicarnos en la carpeta del ambiente 
cd..
cd enviroments\envharmony
Scripts\activate 


///////////////////////////////
////// Uso de rasa  //////
//////////////////////////////
ubicar carpeta rasaBot:
para entrenar el modelo : rasa train

para correr el modelo : rasa shell --port 5007
para correr el codigo : python manage.py runserver  5006 

///////////////////////////////
////// Scripts librerias     ////////
//////////////////////////////
Guardar las librerias en un archivo txt
pip freeze > requirements.txt

instalar las librerias
pip install -r requirements.txt


/////////////////////
////// Docker //////
////////////////////

||| Para subir a la nube: 
construir imagen: docker build --rm -t tesis_web_harmony .

crear el Registro de contenedores :
az acr create --resource-group group-harmony --name harmonyregcontents --sku Basic --admin-enabled true
obtener las credenciales del grupo: 
az acr credential show --resource-group group-harmony --name harmonyregcontents
docker build --rm -t tesis_web_harmony .
ingresar al contendor:
docker login harmonyregcontents.azurecr.io -u harmonyregcontents -p oA6eHVqdZ3bCcSozHpf0VJ8vVRxIstZSLSQgGq+POJ+ACRDNmVZC

etiquetar:
docker tag tesis_web_harmony:latest harmonyregcontents.azurecr.io/tesis_web_harmony:latest

subir la imagen:
docker push harmonyregcontents.azurecr.io/tesis_web_harmony:latest

reiniciar el servidor




////////////////////////
////// Azure //////
//////////////////////
docker build -t rasa_img .
docker run -p 5000:5000 rasa_img

docker tag rasa_img:latest harmonyregcontents.azurecr.io/rasa_img:latest
docker push harmonyregcontents.azurecr.io/rasa_img:latest
